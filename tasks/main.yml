---

  - name: Ensure Consul service group exists
    group:
      name: "{{ consul_group_name }}"
      gid: "{{ consul_group_gid }}"
      system: true
      state: present

  - name: Ensure Consul service user exists
    user:
      name: "{{ consul_user_name }}"
      uid: "{{ consul_user_uid }}"
      group: "{{ consul_group_name }}"
      home: "{{ consul_user_home }}"
      system: true
      state: present

  - name: Ensure unzip is installed
    package:
      name: unzip
      state: present

  - name: Ensure Consul directory structure is configured
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ consul_user_name }}"
      group: "{{ consul_group_name }}"
    with_items:
      - "{{ consul_config_dir }}"
      - "{{ consul_data_dir }}"
      - "{{ consul_user_home }}/bin"

  - name: Fetch Consul
    unarchive:
      src: "{{ consul_uri }}"
      dest: "{{ consul_user_home }}/bin"
      remote_src: true
    become: true
    become_user: "{{ consul_user_name }}"

  - include: config.yml
    with_dict: "{{  consul_configs  }}"
    tags: config

  - name: Deploy Consul service manifest
    template:
      src: "{{ consul_service_file.src }}"
      dest: "{{ consul_service_file.dest }}"
      owner: root
      group: root
      mode: 0600
    register: consul_svc_manifest
    notify:
      - Restart Consul service

  - name: Reload Consul service config
    systemd:
      name: consul
      daemon_reload: true
    when: consul_svc_manifest.changed

  - name: Ensure the Consul service is running
    service:
      name: consul
      state: started
    when: not consul_packer_provision

  - name: Ensure the Consul service is enabled on boot
    service:
      name: consul
      enabled: yes
